<?php

namespace App\Controller\Api;

use App\Repository\EmplacementRepository;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\Routing\Annotation\Route;

#[Route('/api', name: 'api_')]
class VilleApiController extends AbstractController
{
    #[Route('/villes', name: 'villes', methods: ['GET'])]
    public function index(EmplacementRepository $emplacementRepository): JsonResponse
    {
        /**
         * ğŸ”¹ Ã‰tape 1 â€” RÃ©cupÃ©ration de toutes les villes depuis la base de donnÃ©es
         * On utilise le repository de l'entitÃ© Emplacement pour obtenir la liste complÃ¨te.
         */
        $villes = $emplacementRepository->findAll();

        /**
         * ğŸ”¹ Ã‰tape 2 â€” Transformation des objets en tableau simple
         * Comme Angular ne peut pas lire directement des entitÃ©s PHP,
         * on convertit les objets en un tableau de donnÃ©es JSON.
         */
        $data = array_map(function ($ville) {
            return [
                'id' => $ville->getId(),
                'pays' => $ville->getPays(),
                'ville' => $ville->getVille(),
                'code_postal' => $ville->getCodePostal(),
            ];
        }, $villes);

        /**
         * ğŸ”¹ Ã‰tape 3 â€” Envoi de la rÃ©ponse JSON Ã  Angular
         * La mÃ©thode $this->json() convertit automatiquement le tableau en JSON
         * et ajoute les bons en-tÃªtes HTTP pour la rÃ©ponse.
         */
        return $this->json($data);
    }
}
